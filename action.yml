name: "Jenkins-Action"
description: "Start Jenkins jobs and report back URL and status of build"
author: "Josh Levy-Kramer"
inputs:
  url:
    description: "Jenkins URL including http/https protocol"
    required: true
  job_name:
    description: "Jenkins job name to build"
    required: true
  username:
    description: "Jenkins username"
    required: false
  api_token:
    description: "Jenkins API token"
    required: false
  parameters:
    description: 'Build parameters in JSON format e.g. `{"field1":"value1"}`'
    required: false
  cookies:
    description: 'Cookies to include in HTTP requests in JSON format e.g. `{"field1":"value1"}`'
    required: false
  wait:
    description: "Should the runner wait for the build to finish and provide ok status"
    required: false
    default: "True"
  timeout:
    description: "Timeout in seconds for build to complete"
    required: false
    default: "600"
  start_timeout:
    description: "Timeout in seconds for build to start"
    required: false
    default: "600"
  interval:
    description: "How frequently in seconds to query Jenkins for build status"
    required: false
    default: "5"
  image_address:
    description: "Docker image address including ECR part"
    required: true
outputs:
  build_url:
    description: "Jenkins build URL"


runs:
  using: "composite"
  steps:
    - name: Pull Docker image
      run: ls /home/runner/.docker && docker pull ${{ inputs.image_address }}
      shell: bash

    - name: Write parameters to file
      shell: bash
      run: echo '${{ inputs.parameters }}' > parameters.json

    - name: Run Docker container
      shell: bash
      run: |
        docker run --rm \
          -e INPUT_URL="${{ inputs.url }}" \
          -e INPUT_JOB_NAME="${{ inputs.job_name }}" \
          -e INPUT_USERNAME="${{ inputs.username }}" \
          -e INPUT_API_TOKEN="${{ inputs.api_token }}" \
          -e INPUT_PARAMETERS="${{ inputs.parameters }}" \
          -e INPUT_COOKIES="${{ inputs.cookies }}" \
          -e INPUT_WAIT="${{ inputs.wait }}" \
          -e INPUT_TIMEOUT="${{ inputs.timeout }}" \
          -e INPUT_START_TIMEOUT="${{ inputs.start_timeout }}" \
          -e INPUT_INTERVAL="${{ inputs.interval }}" \
          -v $(pwd)/parameters.json:/app/parameters.json \
          ${{ inputs.image_address }}